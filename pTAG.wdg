#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : pTAG
 major_version : 28
 minor_version : 0
 type : 7
 description : ""
 subtype : 0
procedure_set :
 identifier : 0x1aafb71c000c3bcb
 internal_properties : CAAAAAgAAABGLu41kG7fjQV3iS4F72qmnKaNh5694reolNKIW0iw
 code_elements :
  type_code : 31
  p_codes :
   -
     code : |1+
      CONSTANT
      	// Bounds
      	CS_MAX = -1
      	CS_MIN = 99999999
      	
      	// HTML sizes
      	MAX_SIZE = 16
      	SIZE_MIN = 6
      END
     type : 720896
  procedures :
   -
     name : TagAdd
     procedure_id : 1922956956927882500
     type_code : 15
     code : |1-
      // Summary: Adds a TAG into the database
      // Syntax:
      //[ <Result> = ] TagAdd (<sTagName>)
      //
      // Parameters:
      //	sTagName: Name of the tag
      // Return value:
      // 	Undefined type: // 	None
      //
      PROCEDURE TagAdd(sTagName)
      
      HReset(Tag)
      Tag.Word = sTagName
      Tag.Counter = 1
      HAdd(Tag)
      
      RESULT Tag.TagID
     type : 458752
   -
     name : TagList
     procedure_id : 1922957412194456187
     type_code : 15
     code : |1+
      // Summary: Returns the lists of the first n tags 
      // Syntax:
      //[ <Result> = ] TagList ([<nFirst>])
      //
      // Parameters:
      //	nFirst (default value=20): Number of tag to retrieve
      // Return value:
      // 	string: //  	 	None
      //
      PROCEDURE TagList(nFirst=20)
      
      // Variable
      sList     is string
      nNbTag     is int
      nMinFreq   is int = CS_MIN
      nMaxFreq   is int = CS_MAX
      nFreq      is int
      xRatio     is numeric
      aaTagList is ASSOCIATIVE ARRAY of int
      arrSortTag is array of strings
      
      // Browse the tags
      FOR EACH Tag  
      	// Counter of tag
      	nNbTag++
      	
      	// Calculates the min and max of frequencies
      	IF Tag.Counter < nMinFreq THEN nMinFreq = Tag.Counter 
      	IF Tag.Counter > nMaxFreq THEN nMaxFreq = Tag.Counter 
      	aaTagList[Tag.Word] = Tag.Counter
      	Add(arrSortTag,Tag.Word)
      	
      	// Did we reach the limit?
      	IF nNbTag = nFirst THEN BREAK
      END
      
      // We know the minimum frequency and the maximum frequency
      // Calculate the size of the font for each tag.
      xRatio = (MAX_SIZE - SIZE_MIN) / (nMaxFreq-nMinFreq)
      
      // Calculate the size for each tag
      ArraySort(arrSortTag,asAscending)
      FOR ALL ELEMENT sTag of arrSortTag
      	nFreq = aaTagList[sTag]
      	sList += [CR] + sTag + TAB + Round(SIZE_MIN + ((nFreq - nMinFreq) * xRatio))
      END
      
      RESULT sList
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAACVGQgYbalU7DKC3oH4ItDrjtcTHXXV/EuH8q0IbhyQlw==
  original_name : COL_Collection1
resources :
 string_res :
  identifier : 0x1aafb71c000b3bcb
  internal_properties : CAAAAAgAAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
custom_note :
 internal_properties : CAAAAAgAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
